//
//  Copyright (C) 15-05-2013 Jasper den Ouden.
//
//  This is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published
//  by the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//

// Clamp profile and application with 5mm pole system.

$quality=80;
$fs=0.4;

t=4; //Thicknesses.
l= 80; //Length of clamp.
h = 4*t;

zl = 2*t; //Single zigzag length.
zw = t/1.3;

tab=true;
logo=true;

module teeth_profile(l=l)
{   difference()
    {   union()
        {   square([1.5*t,l-1.5*t]);
            intersection() 
            {   translate([0,l-1.5*t]) circle(1.5*t);
                square([1.5*t,l]);
            }
        }
        //Zigzag motion.
        for( y = [zl/2 : zl : l] ) 
            translate([0,y]) scale([zw/zl,1]) rotate(45) square([zl,zl]/sqrt(2), center=true);
        //Entry at top.
        translate([0,l]) rotate(45) square(t*[2,2], center=true);
    }
}
//Peg bit inspired Richard Gains lockbrick; http://www.thingiverse.com/thing:27695
module peg(s,h)
{   linear_extrude(height=h) polygon(s*[[-1,-1],[-1,+1],[+1,-1]]/2); }

//Note/todo: intersecting with a profile the other way would be nice.
module _half_clamp()
{   
    union()
    {   linear_extrude(height=2*h) translate([-0.7*t,1.5*t]) union()
        {   teeth_profile();
            if( tab ) translate([0,-t]) difference(r=t/2)
            {   circle(5*t);
                circle(4*t);
                translate([-8,-8]*t) square([8.5,16]*t);
                translate([-8,-8]*t) square([16,6]*t);
            }
        }
        linear_extrude(height=h) union()
        {   
            difference()
            {   circle(2.2*t); circle(1.5*t); 
                translate(-t*[4,4]) square(t*[4,8]);
            }
            translate(t*[0,-2.5]) square(t*[2,2],r=t/2, center=true);
        }
    }
}

module half_clamp()
{   difference()
    {   union()
        {   _half_clamp();
            translate([0,-2.5*t,h-2*t]) peg(t,4*t);
            if( logo ) translate([t/2,l/2,h]) rotate([0,90]) 
                           linear_extrude(height=0.55*t) oshw_logo_2d(1.5*h);
        }
        translate([0,-2.5*t,h-2*t]) scale([-1,-1,1]) peg(t,4*t);
    }
}

half_clamp();
